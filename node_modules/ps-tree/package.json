{
  "_args": [
    [
      {
        "raw": "ps-tree@^1.2.0",
        "scope": null,
        "escapedName": "ps-tree",
        "name": "ps-tree",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "F:\\liuxin\\egg-project\\node_modules\\egg-cluster"
    ]
  ],
  "_from": "ps-tree@^1.2.0",
  "_hasShrinkwrap": false,
  "_id": "ps-tree@1.2.0",
  "_location": "/ps-tree",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ps-tree_1.2.0_1543261164717_0.8205016894578647"
  },
  "_npmUser": {
    "name": "indexzero",
    "email": "charlie.robbins@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ps-tree@^1.2.0",
    "scope": null,
    "escapedName": "ps-tree",
    "name": "ps-tree",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg-cluster",
    "/graceful"
  ],
  "_resolved": "https://registry.npmjs.org/ps-tree/-/ps-tree-1.2.0.tgz",
  "_shasum": "5e7425b89508736cdd4f2224d028f7bb3f722ebd",
  "_shrinkwrap": null,
  "_spec": "ps-tree@^1.2.0",
  "_where": "F:\\liuxin\\egg-project\\node_modules\\egg-cluster",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "bin": {
    "ps-tree": "./bin/ps-tree.js"
  },
  "bugs": {
    "url": "https://github.com/indexzero/ps-tree/issues",
    "email": "charlie.robbins@gmail.com"
  },
  "contributors": [
    {
      "name": "Zhuohuan LI",
      "email": "zixia@zixia.net",
      "url": "https://github.com/zixia"
    },
    {
      "name": "Simone Primarosa",
      "email": "simonepri@outlook.com",
      "url": "https://github.com/simonepri"
    }
  ],
  "dependencies": {
    "event-stream": "=3.3.4"
  },
  "description": "Get all children of a pid",
  "devDependencies": {
    "codeclimate-test-reporter": "^0.5.0",
    "cross-env": "^2.0.1",
    "istanbul": "^0.4.5",
    "tape": "^4.9.0",
    "tree-kill": "^1.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-0VnamPPYHl4uaU/nSFeZZpR21QAWRz+sRv4iW9+v/GS/J5U5iZB5BNN6J0RMoOvdx2gWM2+ZFMIm58q24e4UYA==",
    "shasum": "5e7425b89508736cdd4f2224d028f7bb3f722ebd",
    "tarball": "https://registry.npmjs.org/ps-tree/-/ps-tree-1.2.0.tgz",
    "fileCount": 6,
    "unpackedSize": 9307,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/EvtCRA9TVsSAnZWagAAnVAP/jm4KalPUpRstIU9nBEa\ni4F75QqPHVpvgs0x5H60UgXegnkUvaeHzioVeiBr6EI3DYcQWOUiSnU0RmaA\nnX3iBshXb7ZYvr3Bvehjz4Qv1+RxaBhRFJxqg32tlEBF0ibI10IJsmMTEeLn\nxAsLAA+rrc10LKNeMTXXMIqGX4I1PRlp+LpgWRYlT/+GL3ta6UgEWpw1kdFA\nTMf9D4cj1DFUgY0pEa5gxjEu/14NQFA1Rhxuf+7Po0866QcEJYfgYYVp8rfi\nQ0wD861quowwTRU9GWXEtaJHq/SKMY2eEAKnOg3wXbfd0fojUT3qqhzz7abg\nymovICQQ47s55fRVOrfgtz3P833wYgpJ1s9oE2N2DGzqEEgfsaskH6EQOmKG\nBEU3FdMQhQ0ffpU3wOf1KIhgoCvv/oUHF84iOT0OlnCQ0591OV0XqV2Wy6BK\nAwkx/etJFce6N1RRnnuHVGqZ9a7GtYs/L/CeA+ijmTUyRJhPm2ta7+tfHo8p\n2zKnLLr8BdfY8j3TQa/TU/NVbGQeAREYCRr7HnMB3pOsjP3U3FiKJKPRPwCx\nk2rzpb+4n+wRrEKne21QKUeP7I6dtJlktraAS1viXYWhmTbnTslKcvlE+SaO\n0QH+qCOCdxpOo3EOnmvXjikysI6CQe9hUqMru+xO1Gt4+n/1WjwpZWZRh1PF\nzPLp\r\n=Rf2h\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "bin",
    "index.js"
  ],
  "gitHead": "696046801b2145df4c0c18bfeafe38dcb9b0a695",
  "homepage": "http://github.com/indexzero/ps-tree#readme",
  "keyboards": [
    "ps-tree",
    "ps",
    "tree",
    "ppid",
    "pid"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "indexzero",
      "email": "charlie.robbins@gmail.com"
    }
  ],
  "name": "ps-tree",
  "optionalDependencies": {},
  "readme": "# ps-tree\n\n[![Build Status](https://travis-ci.org/indexzero/ps-tree.svg)](https://travis-ci.org/indexzero/ps-tree)\n[![Code Climate](https://codeclimate.com/github/indexzero/ps-tree/badges/gpa.svg)](https://codeclimate.com/github/indexzero/ps-tree)\n[![Test Coverage](https://codeclimate.com/github/indexzero/ps-tree/badges/coverage.svg)](https://codeclimate.com/github/indexzero/ps-tree)\n[![npm Version](https://img.shields.io/npm/v/ps-tree.svg)](https://www.npmjs.com/package/ps-tree)\n[![Node.js Version](https://img.shields.io/node/v/ps-tree.svg?style=flat)](http://nodejs.org/download/)\n[![Dependency Status](https://david-dm.org/indexzero/ps-tree.svg)](https://david-dm.org/indexzero/ps-tree)\n\nSometimes you cannot kill child processes like you would expect, this a feature of UNIX.\n\n>in UNIX, a process may terminate by using the exit call, and it's parent process may wait for that event by using the wait system call. the wait system call returns the process identifier of a terminated child, so that the parent tell which of the possibly many children has terminated. If the parent terminates, however, all it's children have assigned as their new parent the init process. Thus, the children still have a parent to collect their status and execution statistics.\n> (from \"operating system concepts\")\n\nSolution: use `ps-tree` to get all processes that a `child_process` may have started, so that they may all be terminated.\n\n``` js\nvar cp = require('child_process'),\n    psTree = require('ps-tree');\n\nvar child = cp.exec(\"node -e 'while (true);'\", function () {...});\n\n// This will not actually kill the child it will kill the `sh` process.\nchild.kill();\n```\n\nwtf? it's because exec actually works like this:\n\n``` js\nfunction exec (cmd, cb) {\n  spawn('sh', ['-c', cmd]);\n  ...\n}\n```\n\n`sh` starts parses the command string and starts processes, and waits for them to terminate, but `exec` returns a process object with the pid of the `sh` process.\nHowever, since it is in `wait` mode killing it does not kill the children.\n\nUse `ps-tree` like this:\n\n``` js\nvar cp = require('child_process'),\n    psTree = require('ps-tree');\n\nvar child = cp.exec(\"node -e 'while (true);'\", function () { /*...*/ });\n\npsTree(child.pid, function (err, children) {\n  cp.spawn('kill', ['-9'].concat(children.map(function (p) { return p.PID })));\n});\n```\n\nIf you prefer to run **psTree** from the command line, use: `node ./bin/ps-tree.js`\n\n## Cross Platform support\n\n\nThe `ps-tree` module behaves differently on *nix vs. Windows by spawning different programs and parsing their output. This is based on `process.platform` and not on checking to see if a `ps` compatible program exists on the system.\n\n#### *nix\n\n1. \" <defunct> \" need to be striped\n```bash\n$ ps -A -o comm,ppid,pid,stat\nCOMMAND          PPID   PID STAT\nbbsd             2899 16958 Ss\nwatch <defunct>  1914 16964 Z\nps              20688 16965 R+\n```\n\n### Windows\n1. `wmic PROCESS WHERE ParentProcessId=4604 GET Name,ParentProcessId,ProcessId,Status)`\n2. The order of head columns is fixed\n```shell\n> wmic PROCESS GET Name,ProcessId,ParentProcessId,Status\nName                          ParentProcessId  ProcessId   Status\nSystem Idle Process           0                0\nSystem                        0                4\nsmss.exe                      4                228\n```\n\n### LICENSE: MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/indexzero/ps-tree.git"
  },
  "scripts": {
    "coverage": "cross-env CODECLIMATE_REPO_TOKEN=84436b4f13c70ace9c62e7f04928bf23c234eb212c0232d39d7fb1535beb2da5 node_modules/.bin/codeclimate-test-reporter < coverage/lcov.info",
    "test": "istanbul cover node_modules/tape/bin/tape test/test.js"
  },
  "version": "1.2.0"
}
