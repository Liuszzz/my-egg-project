{
  "_args": [
    [
      {
        "raw": "egg-schedule@^3.6.0",
        "scope": null,
        "escapedName": "egg-schedule",
        "name": "egg-schedule",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "F:\\liuxin\\egg-project\\node_modules\\egg"
    ]
  ],
  "_from": "egg-schedule@^3.6.0",
  "_hasShrinkwrap": false,
  "_id": "egg-schedule@3.6.1",
  "_location": "/egg-schedule",
  "_nodeVersion": "10.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/egg-schedule_3.6.1_1553044240364_0.25347771777613226"
  },
  "_npmUser": {
    "name": "atian25",
    "email": "atian25@qq.com"
  },
  "_npmVersion": "6.8.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "egg-schedule@^3.6.0",
    "scope": null,
    "escapedName": "egg-schedule",
    "name": "egg-schedule",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg"
  ],
  "_resolved": "https://registry.npmjs.org/egg-schedule/-/egg-schedule-3.6.1.tgz",
  "_shasum": "2cea0d775aeeffa4ba7aa70da47d9d988e29963b",
  "_shrinkwrap": null,
  "_spec": "egg-schedule@^3.6.0",
  "_where": "F:\\liuxin\\egg-project\\node_modules\\egg",
  "author": {
    "name": "dead_horse"
  },
  "bugs": {
    "url": "https://github.com/eggjs/egg-schedule/issues"
  },
  "ci": {
    "version": "8, 10",
    "license": true
  },
  "dependencies": {
    "cron-parser": "^2.4.4",
    "humanize-ms": "^1.2.1",
    "is-type-of": "^1.2.0",
    "safe-timers": "^1.1.0",
    "utility": "^1.13.1"
  },
  "description": "schedule plugin for egg, support corn job.",
  "devDependencies": {
    "autod": "^3.0.1",
    "egg": "^2.3.0",
    "egg-bin": "^4.3.7",
    "egg-ci": "^1.8.0",
    "egg-mock": "^3.14.0",
    "eslint": "^4.16.0",
    "eslint-config-egg": "^6.0.0",
    "mz-modules": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YChSKJsl+vc/QRp8BtZK+cRF7olcN4RS/8+BPS5cSypAnlDzfpBpGHorbwSOMlAg/qJKmzNv47rJMjiN6Vy1gQ==",
    "shasum": "2cea0d775aeeffa4ba7aa70da47d9d988e29963b",
    "tarball": "https://registry.npmjs.org/egg-schedule/-/egg-schedule-3.6.1.tgz",
    "fileCount": 14,
    "unpackedSize": 28457,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckZMRCRA9TVsSAnZWagAAbCkP/0wOCTMY/7tADAYugpFE\nQIeDcVJLn8NLZqEO+6x12H9MMkVAQa9LHVhBZxzlwQlhqx7XVYjBNBaJcDyV\nw8slrPHxIQH2pOHh8UJbLEWNPaY3aSii/2Kt0KqCujkQ6KOAlc9+ZEDk9CZW\n8Wzc2lwSKING10jjt4uGHYfPxmmatXP/UcritY11AsNF5978+Y+aEPjaMVUf\n8qhG3erlMfYzuacILX2jp9Hq9TmUPBje1AUIuzLHstS6umj/8FQtKb+HO3j4\nN1NL63Jq0eYoEk6Gs80R7VpgwZ2wR2QlGIc1NQZtgWaYeP/V4XrVeiVz6XWP\nl0yYrLc0v0Y4GewDpJ4aWSglP9tmwUba6Wr2TllhXF4d/XKzuJEDVuuRiSPY\nlGDONsRx90b7x7YSgiaYbfMFOU3cgKRyH0QPpxmnfgSw7+DzVvivj1H7GWKl\nObfOPx/dDpJEpZMzOQAO8WvBaNkDdh9pK75Bv4neq2XcL/kD72/WEiDVeRAE\n7e4hPrVWMQ4en+P7W97jNatx1DpTSUXDOjSOoDpyaekt0EX9drezVFC9CB5D\npSEcYm4O3bKQWjvYUeSHejolPMdZEarakWarHgxNxB+RC9HYKNbOvU86aG/L\nv5MOKEkszCxaKJpUgvUZL/6GasFOzv/xMA1yDIrx5dxmAU5ap9RWvTXmHqsC\n/ZaM\r\n=RTVo\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eggPlugin": {
    "name": "schedule"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "app",
    "lib",
    "config",
    "agent.js",
    "app.js"
  ],
  "gitHead": "0490f3ff04651ce854d0167c286c59cece9d9331",
  "homepage": "https://github.com/eggjs/egg-schedule#readme",
  "keywords": [
    "egg",
    "egg-plugin",
    "eggPlugin",
    "schedule",
    "cron"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "atian25",
      "email": "atian25@qq.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    }
  ],
  "name": "egg-schedule",
  "optionalDependencies": {},
  "readme": "# egg-schedule\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/egg-schedule.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/egg-schedule\n[travis-image]: https://img.shields.io/travis/eggjs/egg-schedule.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eggjs/egg-schedule\n[codecov-image]: https://codecov.io/github/eggjs/egg-schedule/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/eggjs/egg-schedule?branch=master\n[david-image]: https://img.shields.io/david/eggjs/egg-schedule.svg?style=flat-square\n[david-url]: https://david-dm.org/eggjs/egg-schedule\n[snyk-image]: https://snyk.io/test/npm/egg-schedule/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/egg-schedule\n[download-image]: https://img.shields.io/npm/dm/egg-schedule.svg?style=flat-square\n[download-url]: https://npmjs.org/package/egg-schedule\n\nA schedule plugin for egg, has been built-in plugin for egg enabled by default.\n\nIt's fully extendable for developer and provide a simple built-in TimerStrategy.\n\n## Usage\n\nJust add you job file to `{app_root}/app/schedule`.\n\n```js\n// {app_root}/app/schedule/cleandb.js\nconst Subscription = require('egg').Subscription;\n\nclass CleanDB extends Subscription {\n  /**\n   * @property {Object} schedule\n   *  - {String} type - schedule type, `worker` or `all` or your custom types.\n   *  - {String} [cron] - cron expression, see [below](#cron-style-scheduling)\n   *  - {Object} [cronOptions] - cron options, see [cron-parser#options](https://github.com/harrisiirak/cron-parser#options)\n   *  - {String | Number} [interval] - interval expression in millisecond or express explicitly like '1h'. see [below](#interval-style-scheduling)\n   *  - {Boolean} [immediate] - To run a scheduler at startup\n   *  - {Boolean} [disable] - whether to disable a scheduler, usually use in dynamic schedule\n   *  - {Array} [env] - only enable scheduler when match env list\n   */\n  static get schedule() {\n    return {\n      type: 'worker',\n      cron: '0 0 3 * * *',\n      // interval: '1h',\n      // immediate: true,\n    };\n  }\n\n  async subscribe() {\n    await this.ctx.service.db.cleandb();\n  }\n}\n\nmodule.exports = CleanDB;\n```\n\nYou can also use function simply.\n\n```js\nexports.schedule = {\n  type: 'worker',\n  cron: '0 0 3 * * *',\n  // interval: '1h',\n  // immediate: true,\n};\n\nexports.task = async function (ctx) {\n  await ctx.service.db.cleandb();\n};\n```\n\n## Overview\n\n`egg-schedule` supports both cron-based scheduling and interval-based scheduling.\n\nSchedule decision is being made by `agent` process. `agent` triggers a task and sends message to `worker` process. Then, one or all `worker` process(es) execute the task based on schedule type.\n\nTo setup a schedule task, simply create a job file in `{app_root}/app/schedule`. A file contains one job and export `schedule` and `task` properties.\n\nThe rule of thumbs is one job per file.\n\n## Task\n\nTask is a class which will be instantiated every schedule, and `subscribe` method will be invoked.\n\nYou can get anonymous context with `this.ctx`.\n\n- ctx.method: `SCHEDULE`\n- ctx.path: `/__schedule?path=${schedulePath}&${schedule}`.\n\nTo create a task, `subscribe` can be generator function or async function. For example:\n\n```js\n// A simple logger example\nconst Subscription = require('egg').Subscription;\nclass LoggerExample extends Subscription {\n  async subscribe() {\n    this.ctx.logger.info('Info about your task');\n  }\n}\n```\n\n```js\n// A real world example: wipe out your database.\n// Use it with caution. :)\nconst Subscription = require('egg').Subscription;\nclass CleanDB extends Subscription {\n  async subscribe() {\n    await this.ctx.service.db.cleandb();\n  }\n}\n```\n\n## Scheduling\n\n`schedule` is an object that contains one required property, `type`, and optional properties, `{ cron, cronOptions, interval, immediate, disable, env }`.\n\n### Cron-style Scheduling\n\nUse [cron-parser](https://github.com/harrisiirak/cron-parser).\n\n> Note: `cron-parser` support `second` as optional that is not supported by linux crontab.\n>\n> `@hourly / @daily / @weekly / @monthly / @yearly` is also supported.\n\n```bash\n*    *    *    *    *    *\n┬    ┬    ┬    ┬    ┬    ┬\n│    │    │    │    │    |\n│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n│    │    │    │    └───── month (1 - 12)\n│    │    │    └────────── day of month (1 - 31)\n│    │    └─────────────── hour (0 - 23)\n│    └──────────────────── minute (0 - 59)\n└───────────────────────── second (0 - 59, optional)\n```\n\nExample:\n\n```js\n// To execute task every 3 hours\nexports.schedule = {\n  type: 'worker',\n  cron: '0 0 */3 * * *',\n  cronOptions: {\n    // tz: 'Europe/Athens',\n  }\n};\n```\n\n### Interval-style Scheduling\n\nTo use `setInterval`, and support [ms](https://www.npmjs.com/package/ms) conversion style\n\nExample:\n\n```js\n// To execute task every 3 hours\nexports.schedule = {\n  type: 'worker',\n  interval: '3h',\n};\n```\n\n**Notice: Egg built-in TimerStrategy will schedule each execution at a fix rate, regardless of its execution time. So you have to make sure that your actual execution time of your `task/subscribe` must be smaller than your delay time.**\n\n### Schedule Type\n\n**Build-in support is:**\n\n- `worker`: will be executed in one random worker when schedule run.\n- `all`: will be executed in all workers when schedule run.\n\n**Custom schedule:**\n\nTo create a custom schedule, simply extend `agent.ScheduleStrategy` and register it by `agent.schedule.use(type, clz)`.\nYou can schedule the task to be executed by one random worker or all workers with the built-in method `this.sendOne(...args)` or `this.sendAll(...args)` which support params, it will pass to `subscribe(...args)` or `task(ctx, ...args)`.\n\n```js\n// {app_root}/agent.js\nmodule.exports = function(agent) {\n  class CustomStrategy extends agent.ScheduleStrategy {\n    start() {\n      // such as mq / redis subscribe\n      agent.notify.subscribe('remote_task', data => {\n        this.sendOne(data);\n      });\n    }\n  }\n  agent.schedule.use('custsom', CustomStrategy);\n};\n```\n\nThen you could use it to defined your job:\n\n```js\n// {app_root}/app/schedule/other.js\nconst Subscription = require('egg').Subscription;\nclass ClusterTask extends Subscription {\n  static get schedule() {\n    return {\n      type: 'custom',\n    };\n  }\n  async subscribe(data) {\n    console.log('got custom data:', data);\n    await this.ctx.service.someTask.run();\n  }\n}\n```\n\n## Dynamic schedule\n\n```js\n// {app_root}/app/schedule/sync.js\nmodule.exports = app => {\n  class SyncTask extends app.Subscription {\n    static get schedule() {\n      return {\n        interval: 10000,\n        type: 'worker',\n        // only start task when hostname match\n        disable: require('os').hostname() !== app.config.sync.hostname,\n        // only start task at prod mode\n        env: [ 'prod' ],\n      };\n    }\n    async subscribe(ctx) {\n      await ctx.sync();\n    }\n  }\n  return SyncTask;\n}\n```\n\n## Configuration\n\n### Logging\n\nSee `${appInfo.root}/logs/{app_name}/egg-schedule.log` which provided by [config.customLogger.scheduleLogger](https://github.com/eggjs/egg-schedule/blob/master/config/config.default.js).\n\n```js\n// config/config.default.js\nconfig.customLogger = {\n  scheduleLogger: {\n    // consoleLevel: 'NONE',\n    // file: path.join(appInfo.root, 'logs', appInfo.name, 'egg-schedule.log'),\n  },\n};\n```\n\n### Customize directory\n\nIf you want to add additional schedule directories, you can use this config.\n\n```js\n// config/config.default.js\nconfig.schedule = {\n  directory: [\n    path.join(__dirname, '../app/otherSchedule'),\n  ],\n};\n```\n\n## Testing\n\n`app.runSchedule(scheduleName)` is provided by `egg-schedule` plugin only for test purpose.\n\nExample:\n\n```js\nit('test a schedule task', async function () {\n  // get app instance\n  await app.runSchedule('clean_cache');\n});\n```\n\n## Questions & Suggestions\n\nPlease open an issue [here](https://github.com/eggjs/egg/issues).\n\n## License\n\n[MIT](https://github.com/eggjs/egg-schedule/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/eggjs/egg-schedule.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "npm run lint && egg-bin pkgfiles --check && npm run cov",
    "cov": "egg-bin cov",
    "lint": "eslint .",
    "test": "npm run lint -- --fix && egg-bin pkgfiles && npm run test-local",
    "test-local": "egg-bin test"
  },
  "version": "3.6.1"
}
