{
  "_args": [
    [
      {
        "raw": "ready-callback@^2.1.0",
        "scope": null,
        "escapedName": "ready-callback",
        "name": "ready-callback",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "F:\\liuxin\\egg-project\\node_modules\\egg-core"
    ]
  ],
  "_from": "ready-callback@>=2.1.0 <3.0.0",
  "_id": "ready-callback@2.1.0",
  "_inCache": true,
  "_location": "/ready-callback",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ready-callback_2.1.0_1534847769959_0.22535173148050758"
  },
  "_npmUser": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ready-callback@^2.1.0",
    "scope": null,
    "escapedName": "ready-callback",
    "name": "ready-callback",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg-core"
  ],
  "_resolved": "https://registry.npmjs.org/ready-callback/-/ready-callback-2.1.0.tgz",
  "_shasum": "e382a9e33a568b8d771e04ef4ef0eb02d3dfa7e0",
  "_shrinkwrap": null,
  "_spec": "ready-callback@^2.1.0",
  "_where": "F:\\liuxin\\egg-project\\node_modules\\egg-core",
  "author": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/node-modules/ready-callback/issues"
  },
  "ci": {
    "version": "4, 6, 7"
  },
  "dependencies": {
    "debug": "^2.6.0",
    "get-ready": "^2.0.0",
    "once": "^1.4.0",
    "uuid": "^3.0.1"
  },
  "description": "Launch server after all async task ready",
  "devDependencies": {
    "autod": "^2.7.1",
    "egg-bin": "^1.11.1",
    "egg-ci": "^1.1.0",
    "eslint": "^3.15.0",
    "eslint-config-egg": "^3.2.0",
    "koa": "^1.2.4",
    "mz-modules": "^2.1.0",
    "spy": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-pyoQjeks8RvkzHbdDgSS1Faw+3xByvnWxccsIiBLOtFX+sp6pkpdSuIZJzfIgpzpOSOdVFVxrFEL+VcNL3+bBQ==",
    "shasum": "e382a9e33a568b8d771e04ef4ef0eb02d3dfa7e0",
    "tarball": "https://registry.npmjs.org/ready-callback/-/ready-callback-2.1.0.tgz",
    "fileCount": 4,
    "unpackedSize": 9459,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbe+saCRA9TVsSAnZWagAABL0P/1QTTOTluYAkkrNSRhoM\n8nGj4PfBDOwJ7D4JN89JzTvXXFJgzFyRhZsr2uzdHluJBqZPO6Ww6ba3j46g\nMq0Yi1Jmm5hPIeGHfznL0hU+TzDtqFphydYXtBgn9nVu9JBR/966vKmjSaRC\n54uNIe3RCL3THWI35l6UXEy8Jx7J60T+T0apmzuMmOE+KKtiLWMWga99nilB\n4sWESbCnspCQkc0ShagOg9hJabQClKTwByEs8SgD+dcgocbeV/G71Zvkzhai\nOirtAIz9pwEhI0l4afeAUSl47nL0x0DlnAauN2ldsSwlIKuGjjKj5Cw5jDfD\n43AMuQBnwy+esquKoy26w0imrujkwdA9rK+5NqRN/RvMAB5wOY427qGA85jv\nn0MV0nBjmDdyDRwYPYNz8KTprdcLXaP8Php823kShEfdeTUodrACqetmBSue\n6Ry0UQZj4lcuqc9O0pFTYFpiZiI8Rjvbm2eBO4j9xVMmDJsw9h4aaMmPAuec\nTncvyum2IPIxBlCGyGmfpJP9ulgEWvEbSVlkgUtvLpbTD0pmkB2nYUme4w7Z\npuwFcfP0YNHATeU5iZKmmzK4l+DWxQ4r+1+xJ0au3T3VFa57H3mADcp2mC6Y\nA/LOwp142S8GC619uYPb0MSA3AoaQBXcAX6zHBogpRACBxHxaaHnHM2GCgiC\nE5W7\r\n=jA8c\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "2a383cb24fe850e0e5d9d06db5773f563acbc7bb",
  "homepage": "https://github.com/node-modules/ready-callback",
  "keywords": [
    "koa",
    "ready",
    "async"
  ],
  "license": "MIT",
  "main": "lib/ready.js",
  "maintainers": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    }
  ],
  "name": "ready-callback",
  "optionalDependencies": {},
  "readme": "# ready-callback\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/ready-callback.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/ready-callback\n[travis-image]: https://img.shields.io/travis/node-modules/ready-callback.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/ready-callback\n[codecov-image]: https://codecov.io/github/node-modules/ready-callback/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/node-modules/ready-callback?branch=master\n[david-image]: https://img.shields.io/david/node-modules/ready-callback.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/ready-callback\n[download-image]: https://img.shields.io/npm/dm/ready-callback.svg?style=flat-square\n[download-url]: https://npmjs.org/package/ready-callback\n\nLaunch server after all async task ready\n\n---\n\n## Install\n\n```\n$ npm install ready-callback\n```\n\n## Usage\n\n**Note: ready-callback is using `class`, so you should use node>=2**\n\n```\nvar koa = require('koa');\nvar ready = require('ready-callback')();\nvar app = koa();\nready.mixin(app);\n\n// register a service\nvar done = app.readyCallback('service');\nserviceLaunch(done);\n\n// callback will be fired after all service launched\napp.ready(function() {\n  app.listen();\n});\n```\n\n### Error Handle\n\nIf task is called with error, `error` event will be emit, `ready` will never be called.\n\n```\n// register a service that will emit error\nvar done = app.readyCallback('service');\nserviceLaunch(function(err) {\n  done(err);\n});\n\n// listen error event\napp.on('error', function(err) {\n  // catch error\n});\n```\n\n### Weak Dependency\n\nIf you set a task weak dependency, task will be done without emit `error`.\n\n```\nvar done = app.readyCallback('service', {isWeakDep: true});\nserviceLaunch(function(err) {\n  done(err);\n});\n\n// will be ready\napp.ready(function() {\n  app.listen();\n});\n\napp.on('error', function(err) {\n  // never be called\n});\n```\n\nYou can also set for all ready-callback\n\n```\nvar ready = require('ready-callback')({isWeakDep: true});\n```\n\n### Ready Status\n\nYou can get status every callback end.\n\n```\napp.on('ready_stat', function(data) {\n  console.log(data.id); // id of the ended task\n  console.log(data.remain); // tasks waiting to be ended\n});\n```\n\n### Timeout\n\nYou can set timeout when a task run a long time.\n\n```\nvar ready = require('ready-callback')({timeout: 1000});\nready.mixin(app);\napp.on('ready_timeout', function(id) {\n  // this will be called after 1s that `service` task don't complete\n});\n\nvar done = app.readyCallback('service');\nserviceLaunch(function() {\n  // run a long time\n  done();\n});\n```\n\nYou can also set timeout for every task\n\n```\nready.mixin(app);\napp.on('ready_timeout', function(id) {\n  // this will be called after 1s that `service` task don't complete\n});\n\nvar done = app.readyCallback('service1', {timeout: 1000});\nserviceLaunch(done);\n```\n\n### lazyStart\n\nYou can set a ready-callback object to lazyStart. It will not check \nready status immediately, and should start manualy to check ready \nstatus.\n\n```js\nvar ready = require('ready-callback')({ lazyStart: true });\nyield sleep(1);\n// ready obj is not ready\nready.start();\nyield sleep(1);\n// ready obj is ready now\n```\n\n## LISENCE\n\nCopyright (c) 2015 popomore. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/node-modules/ready-callback.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "npm run lint && egg-bin cov",
    "cov": "egg-bin cov",
    "lint": "eslint .",
    "test": "npm run lint -- --fix && egg-bin test"
  },
  "version": "2.1.0"
}
