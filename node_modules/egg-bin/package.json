{
  "_args": [
    [
      {
        "raw": "egg-bin",
        "scope": null,
        "escapedName": "egg-bin",
        "name": "egg-bin",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "F:\\liuxin\\egg-project"
    ]
  ],
  "_from": "egg-bin",
  "_hasShrinkwrap": false,
  "_id": "egg-bin@4.12.3",
  "_location": "/egg-bin",
  "_nodeVersion": "10.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/egg-bin_4.12.3_1554779248776_0.5879648065222725"
  },
  "_npmUser": {
    "name": "atian25",
    "email": "atian25@qq.com"
  },
  "_npmVersion": "6.8.0",
  "_phantomChildren": {
    "@types/glob": "7.1.1",
    "array-union": "1.0.2",
    "browser-stdout": "1.3.1",
    "cache-require-paths": "0.3.0",
    "camelcase": "5.3.1",
    "chalk": "2.4.2",
    "chokidar": "2.1.5",
    "cliui": "4.1.0",
    "commander": "2.20.0",
    "decamelize": "1.2.0",
    "diff": "3.5.0",
    "dir-glob": "2.0.0",
    "dot-prop": "4.2.0",
    "emoji-regex": "7.0.3",
    "enquirer": "2.3.0",
    "escape-string-regexp": "1.0.5",
    "fast-glob": "2.2.6",
    "find-up": "3.0.0",
    "glob": "7.1.3",
    "growl": "1.10.5",
    "has-flag": "3.0.0",
    "he": "1.2.0",
    "ignore": "3.3.10",
    "is-fullwidth-code-point": "2.0.0",
    "js-yaml": "3.13.0",
    "log-symbols": "2.2.0",
    "minimatch": "3.0.4",
    "mkdirp": "0.5.1",
    "ms": "2.1.1",
    "node-environment-flags": "1.0.4",
    "object.assign": "4.1.0",
    "os-locale": "3.1.0",
    "path-type": "3.0.0",
    "pify": "3.0.0",
    "require-directory": "2.1.1",
    "set-blocking": "2.0.0",
    "slash": "1.0.0",
    "strip-json-comments": "2.0.1",
    "ts-node": "7.0.1",
    "tslib": "1.9.3",
    "typescript": "3.4.3",
    "which": "1.3.1",
    "which-module": "2.0.0",
    "wide-align": "1.1.3",
    "y18n": "4.0.0",
    "yargs-unparser": "1.5.0",
    "yn": "3.1.0"
  },
  "_requested": {
    "raw": "egg-bin",
    "scope": null,
    "escapedName": "egg-bin",
    "name": "egg-bin",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/egg-bin/-/egg-bin-4.12.3.tgz",
  "_shasum": "b90db2954bac856b1d051411599b4aa99b1a788f",
  "_shrinkwrap": null,
  "_spec": "egg-bin",
  "_where": "F:\\liuxin\\egg-project",
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com",
    "url": "https://fengmk2.com"
  },
  "bin": {
    "egg-bin": "bin/egg-bin.js",
    "mocha": "bin/mocha.js",
    "ets": "bin/ets.js"
  },
  "bug": {
    "url": "https://github.com/eggjs/egg/issues"
  },
  "bugs": {
    "url": "https://github.com/eggjs/egg-bin/issues"
  },
  "ci": {
    "version": "6, 8"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "https://fengmk2.com"
    }
  ],
  "dependencies": {
    "autod": "^3.1.0",
    "chalk": "^2.4.2",
    "co-mocha": "^1.2.2",
    "common-bin": "^2.8.1",
    "debug": "^4.1.1",
    "detect-port": "^1.3.0",
    "egg-ts-helper": "^1.25.2",
    "egg-utils": "^2.4.1",
    "espower-typescript": "9.0.1",
    "globby": "^9.2.0",
    "inspector-proxy": "^1.2.1",
    "intelli-espower-loader": "^1.0.1",
    "jest-changed-files": "^24.7.0",
    "mocha": "^6.0.2",
    "mz-modules": "^2.1.0",
    "nyc": "^13.3.0",
    "power-assert": "^1.6.1",
    "semver": "^6.0.0",
    "test-exclude": "^5.1.0",
    "ts-node": "^7",
    "ypkgfiles": "^1.6.0"
  },
  "description": "egg developer tool",
  "devDependencies": {
    "@types/mocha": "^5.0.0",
    "autod": "^3.1.0",
    "babel": "^6.3.26",
    "babel-preset-airbnb": "^1.0.1",
    "babel-register": "^6.4.3",
    "coffee": "^5.2.1",
    "cross-env": "^3.1.3",
    "egg": "^2.20.2",
    "egg-mock": "^3.22.1",
    "enzyme": "^2.0.0",
    "eslint": "^4.12.1",
    "eslint-config-egg": "^7.3.1",
    "jsdom": "^8.0.1",
    "mm": "^2.5.0",
    "mz": "^2.7.0",
    "react": "^0.14.7",
    "react-addons-test-utils": "^0.14.7",
    "react-dom": "^0.14.7",
    "semver": "^5.4.1",
    "typescript": "^2.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-D0Kv8ChiLjtU/7mvPwNH1BSyft6+rGXkvLyGQHWL3E6kJzbsW+aYEQH2fE/ceRus9M3NsU0AX0RRM/BmsDWQhA==",
    "shasum": "b90db2954bac856b1d051411599b4aa99b1a788f",
    "tarball": "https://registry.npmjs.org/egg-bin/-/egg-bin-4.12.3.tgz",
    "fileCount": 17,
    "unpackedSize": 44847,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrAxxCRA9TVsSAnZWagAA254QAIODPQgdDBf/ReoSXYKR\n5IZ5ddcDNen5ZIPg9h3YY19uX7GjhfpkBdSJ9CqrvAHCtYz7zUwxvMp1HGDz\nv/jA+Ukyv+01BBee51SrnByU1lDKR0mm3elVacIx7vrp8bHSyWdr8JT4zAkR\nB5j5wF9rSD7sgWek0vkzGgNGBdZaKTQn/J6gPMUb8AUanWFwUIi4O/gVbVlS\nSe/lDFb8pKv+tfnxNftY1HOKpX82XLzjWnE6JF146a3RevhWJeK+uRdAH0st\n/2cfuLlx/TCxiKviMIKR0vvUTGGkxJmZClAZDu3cj615VONrOHgaLUbpxBfu\nap3ff1I2U0XnyX54fFZL5TDrfudp8VZcTmE7eNVoCBkdRDTP013xT6ggLYZi\nA+tyLpuUQMf1Uy9VAPi6ecYu+wlroDSq8JibNg5lv1pRZwgYRPgd2DyW6vtt\nV8X0iGxBIrzQ2sYULCL5LAETgT5P6S6p5Cn4S3TMVRVREzAsVjnHulC1pkF4\nh7Q0QelBuYmG6XeBqtw/zcKJ6ght+4FF2CkGW0tAuWN6slfaac5TIJn7pKu3\nbhB/zaufyEeWnuF3SAJkjWLpMIBx3KkiLQoeycJl/LTyBQH/TrcmZm+4Y6vp\nQI2eGqLrY7YhoiE4umSFZN9z/WIyIZLSg+mRGYalmHd57Y1ejhlXLiCwFez4\nGAgC\r\n=qAVe\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "files": [
    "index.js",
    "lib",
    "bin"
  ],
  "gitHead": "619c1bff52a5a91c5c10f3e0e86275395d8ab4f3",
  "homepage": "https://github.com/eggjs/egg-bin",
  "main": "index.js",
  "maintainers": [
    {
      "name": "atian25",
      "email": "atian25@qq.com"
    },
    {
      "name": "coolme200",
      "email": "2001-wms@163.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "eggjs-admin",
      "email": "fengmk2+eggjs@gmail.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "hyj1991",
      "email": "yeekwanvong@gmail.com"
    },
    {
      "name": "killagu",
      "email": "killa07071201@gmail.com"
    },
    {
      "name": "ngot",
      "email": "zhuanghengfei@gmail.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    },
    {
      "name": "thonatos",
      "email": "thonatos.yang@gmail.com"
    },
    {
      "name": "wanghx",
      "email": "whxaxes@gmail.com"
    },
    {
      "name": "xadillax",
      "email": "admin@xcoder.in"
    }
  ],
  "name": "egg-bin",
  "optionalDependencies": {},
  "readme": "# egg-bin\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/egg-bin.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/egg-bin\n[travis-image]: https://img.shields.io/travis/eggjs/egg-bin.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eggjs/egg-bin\n[codecov-image]: https://codecov.io/gh/eggjs/egg-bin/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/eggjs/egg-bin\n[david-image]: https://img.shields.io/david/eggjs/egg-bin.svg?style=flat-square\n[david-url]: https://david-dm.org/eggjs/egg-bin\n[snyk-image]: https://snyk.io/test/npm/egg-bin/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/egg-bin\n[download-image]: https://img.shields.io/npm/dm/egg-bin.svg?style=flat-square\n[download-url]: https://npmjs.org/package/egg-bin\n\negg developer tool, extends [common-bin].\n\n---\n\n## Install\n\n```bash\n$ npm i egg-bin --save-dev\n```\n\n## Usage\n\nAdd `egg-bin` to `package.json` scripts:\n\n```json\n{\n  \"scripts\": {\n    \"dev\": \"egg-bin dev\",\n    \"debug\": \"egg-bin debug\",\n    \"test-local\": \"egg-bin test\",\n    \"test\": \"npm run lint -- --fix && npm run test-local\",\n    \"cov\": \"egg-bin cov\",\n    \"lint\": \"eslint .\",\n    \"pkgfiles\": \"egg-bin pkgfiles\",\n    \"autod\": \"egg-bin autod\",\n    \"ci\": \"npm run lint && npm run autod -- --check && npm run pkgfiles -- --check && npm run cov\"\n  }\n}\n```\n\n## Command\n\nAll the commands support these specific v8 options:\n\n- `--debug`\n- `--inspect`\n- `--harmony*`\n- `--es_staging`\n\n```bash\n$ egg-bin [command] --debug --es_staging\n```\n\nif `process.env.NODE_DEBUG_OPTION` is provided (WebStorm etc), will use it as debug options.\n\n### dev\n\nStart dev cluster on `local` env, it will start a master, an agent and a worker.\n\n```bash\n$ egg-bin dev\n```\n\n##### options\n\n- `--framework` egg web framework root path.\n- `--baseDir` application's root path, default to `process.cwd()`.\n- `--port` server port, default to `7001`.\n- `--workers` worker process number, default to `1` worker at local mode.\n- `--sticky` start a sticky cluster server, default to `false`.\n- `--typescript` / `--ts` enable typescript support, default to `false`. Also support read from `package.json`'s `egg.typescript`.\n- `--declarations` / `--dts` enable [egg-ts-helper](https://github.com/whxaxes/egg-ts-helper) support, default to `false`. Also support read from `package.json`'s `egg.declarations`.\n- `--require` will add to `execArgv`, support multiple. Also support read from `package.json`'s `egg.require`\n\n### debug\n\nDebug egg app with [V8 Inspector Integration](https://nodejs.org/api/debugger.html#debugger_v8_inspector_integration_for_node_js).\n\nautomatically detect the protocol, use the new `inspector` when the targeted runtime >=7.0.0 .\n\nif running without `VSCode` or `WebStorm`, we will use [inspector-proxy](https://github.com/whxaxes/inspector-proxy) to proxy worker debug, so you don't need to worry about reload.\n\n```bash\n$ egg-bin debug --debug-port=9229 --proxy=9999\n```\n\n##### options\n\n- all `egg-bin dev` options is accepted.\n- `--proxy=9999` worker debug proxy port.\n\n\n### test\n\nUsing [mocha] with [co-mocha] to run test.\n\n[power-assert] is the default `assert` library, and [intelli-espower-loader] will be auto required.\n\n```bash\n$ egg-bin test [files] [options]\n```\n\n- `files` is optional, default to `test/**/*.test.js`\n- `test/fixtures`, `test/node_modules` is always exclude.\n\n#### auto require `test/.setup.js`\n\nIf `test/.setup.js` file exists, it will be auto require as the first test file.\n\n```js\ntest\n  ├── .setup.js\n  └── foo.test.js\n```\n\n#### options\n\nYou can pass any mocha argv.\n\n- `--require` require the given module\n- `--grep` only run tests matching <pattern>\n- `--timeout` milliseconds, default to 60000\n- `--full-trace` display the full stack trace, default to false.\n- `--typescript` / `--ts` enable typescript support, default to `false`.\n- `--changed` / `-c` only test changed test files(test files means files that match `${pwd}/test/**/*.test.(js|ts)`)\n- see more at https://mochajs.org/#usage\n\n#### environment\n\nEnvironment is also support, will use it if options not provide.\n\nYou can set `TESTS` env to set the tests directory, it support [glob] grammar.\n\n```bash\nTESTS=test/a.test.js egg-bin test\n```\n\nAnd the reporter can set by the `TEST_REPORTER` env, default is `spec`.\n\n```bash\nTEST_REPORTER=doc egg-bin test\n```\n\nThe test timeout can set by `TEST_TIMEOUT` env, default is `60000` ms.\n\n```bash\nTEST_TIMEOUT=2000 egg-bin test\n```\n\n### cov\n\nUsing [nyc] to run code coverage, it support all test params above.\n\nCoverage reporter will output text-summary, json and lcov.\n\n#### options\n\nYou can pass any mocha argv.\n\n- `-x` add dir ignore coverage, support multiple argv\n- `--prerequire` prerequire files for coverage instrument, you can use this options if load files slowly when call `mm.app` or `mm.cluster`\n- `--typescript` / `--ts` enable typescript support, default to `false`, if true, will auto add `.ts` extension and ignore `typings` and `d.ts`.\n- `--nyc` nyc instruments passthrough. you can use this to overwrite egg-bin's default nyc instruments and add additional ones.\n  > if you want to add addtional `nyc` reporters, you need to use this rather than add `reporter` key in `.nycrc` because:\n  > - when same key exists in `.nycrc` and cmd instruments, nyc prefers instrument.\n  > - egg-bin have some default instruments passed to nyc like `-r` and `--temp-directory`\n  > - `egg-bin cov --nyc=\"-r teamcity -r text\"`\n\n- also support all test params above.\n\n#### environment\n\nYou can set `COV_EXCLUDES` env to add dir ignore coverage.\n\n```bash\n$ COV_EXCLUDES=\"app/plugins/c*,app/autocreate/**\" egg-bin cov\n```\n\n### pkgfiles\n\nGenerate `pkg.files` automatically before npm publish, see [ypkgfiles] for detail\n\n```bash\n$ egg-bin pkgfiles\n```\n\n### autod\n\nGenerate `pkg.dependencies` and `pkg.devDependencies` automatically, see [autod] for detail\n\n```bash\n$ egg-bin autod\n```\n\n## Custom egg-bin for your team\n\nYou maybe need a custom egg-bin to implement more custom features if your team has develop a framework base on egg.\n\nNow you can implement a [Command](lib/command.js) sub class to do that.\nOr you can just override the exists command.\n\nSee more at [common-bin].\n\n### Example: Add [nsp] for security scan\n\n[nsp] has provide a useful security scan feature.\n\nThis example will show you how to add a new `NspCommand` to create a new `egg-bin` tool.\n\n- Full demo: [my-egg-bin](test/fixtures/my-egg-bin)\n\n#### [my-egg-bin](test/fixtures/my-egg-bin/index.js)\n\n```js\nconst EggBinCommand = require('egg-bin');\n\nclass MyEggBinCommand extends EggBinCommand {\n  constructor(rawArgv) {\n    super(rawArgv);\n    this.usage = 'Usage: egg-bin [command] [options]';\n\n    // load directory\n    this.load(path.join(__dirname, 'lib/cmd'));\n  }\n}\n\nmodule.exports = MyEggBinCommand;\n```\n\n#### [NspCommand](test/fixtures/my-egg-bin/lib/cmd/nsp.js)\n\n```js\nconst Command = require('egg-bin').Command;\n\nclass NspCommand extends Command {\n  * run({ cwd, argv }) {\n    console.log('run nsp check at %s with %j', cwd, argv);\n  }\n\n  description() {\n    return 'nsp check';\n  }\n}\n\nmodule.exports = NspCommand;\n```\n\n#### [my-egg-bin.js](test/fixtures/my-egg-bin/bin/my-egg-bin.js)\n\n```js\n#!/usr/bin/env node\n\n'use strict';\nconst Command = require('..');\nnew Command().start();\n```\n\n#### Run result\n\n```bash\n$ my-egg-bin nsp\n\nrun nsp check at /foo/bar with {}\n```\n\n## License\n\n[MIT](LICENSE)\n\n\n[mocha]: https://mochajs.org\n[co-mocha]: https://npmjs.com/co-mocha\n[glob]: https://github.com/isaacs/node-glob\n[istanbul]: https://github.com/gotwarlost/istanbul\n[nsp]: https://npmjs.com/nsp\n[iron-node]: https://github.com/s-a/iron-node\n[intelli-espower-loader]: https://github.com/power-assert-js/intelli-espower-loader\n[power-assert]: https://github.com/power-assert-js/power-assert\n[ypkgfiles]: https://github.com/popomore/ypkgfiles\n[common-bin]: https://github.com/node-modules/common-bin\n[autod]: https://github.com/node-modules/autod\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eggjs/egg-bin.git"
  },
  "scripts": {
    "autod": "node bin/egg-bin.js autod",
    "ci": "npm run lint && npm run pkgfiles -- --check && npm run ci-test-only && npm run cov",
    "ci-test-only": "TESTS=test/lib/cmd/cov.test.js npm run test-local",
    "cov": "nyc -r lcov -r text-summary npm run test-local",
    "lint": "eslint .",
    "pkgfiles": "node bin/egg-bin.js pkgfiles",
    "test": "npm run lint -- --fix && npm run test-local",
    "test-local": "node bin/egg-bin.js test -t 3600000"
  },
  "version": "4.12.3"
}
