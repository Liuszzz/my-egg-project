{
  "_args": [
    [
      {
        "raw": "sdk-base@^3.5.1",
        "scope": null,
        "escapedName": "sdk-base",
        "name": "sdk-base",
        "rawSpec": "^3.5.1",
        "spec": ">=3.5.1 <4.0.0",
        "type": "range"
      },
      "F:\\liuxin\\egg-project\\node_modules\\cluster-client"
    ]
  ],
  "_from": "sdk-base@^3.5.1",
  "_hasShrinkwrap": false,
  "_id": "sdk-base@3.5.1",
  "_location": "/sdk-base",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sdk-base_3.5.1_1538056450944_0.929156341719821"
  },
  "_npmUser": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sdk-base@^3.5.1",
    "scope": null,
    "escapedName": "sdk-base",
    "name": "sdk-base",
    "rawSpec": "^3.5.1",
    "spec": ">=3.5.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cluster-client",
    "/egg-watcher",
    "/tcp-base"
  ],
  "_resolved": "https://registry.npmjs.org/sdk-base/-/sdk-base-3.5.1.tgz",
  "_shasum": "2e1a927a456d94327d802074650077c767c3103a",
  "_shrinkwrap": null,
  "_spec": "sdk-base@^3.5.1",
  "_where": "F:\\liuxin\\egg-project\\node_modules\\cluster-client",
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com",
    "url": "http://deadhorse.me"
  },
  "bugs": {
    "url": "https://github.com/node-modules/sdk-base/issues"
  },
  "ci": {
    "version": "6, 8, 9"
  },
  "dependencies": {
    "await-event": "^2.1.0",
    "await-first": "^1.0.0",
    "co": "^4.6.0",
    "is-type-of": "^1.2.0"
  },
  "description": "a base class for sdk with default error handler",
  "devDependencies": {
    "@types/node": "^10.5.3",
    "autod": "^3.0.1",
    "egg-bin": "^4.3.5",
    "egg-ci": "^1.8.0",
    "eslint": "^4.11.0",
    "eslint-config-egg": "^5.1.1",
    "pedding": "^1.1.0",
    "runscript": "^1.3.0",
    "typescript": "^2.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-me8HQakVUUAbJrt9Zc/43b+fBJ2qUojPTQWhX0rm+qRIFC3bG/zG9HGmcIwCzVRuEhBPWtHiJkfW2aEp6IFAeQ==",
    "shasum": "2e1a927a456d94327d802074650077c767c3103a",
    "tarball": "https://registry.npmjs.org/sdk-base/-/sdk-base-3.5.1.tgz",
    "fileCount": 6,
    "unpackedSize": 15501,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrOEECRA9TVsSAnZWagAAomYP/0UzfCT/KoludG4RBT4Y\n16yhG2Q4oA94CJQRa+DU9l6EjvQ0dWY6/XvdJxlxNx0Q3KUex5OFDcSDGJzr\nRMX+8quCQ6nFrNHTNIJ+K/ve54K1NsPfcbSO2AwIGrpKdvvRA+8nmMsGbGDH\njABVCgztXrpBsQbk/aspWWzV5ztcHxdZtMNEasEMIRhPBw/jwLyBKeYVfNga\nkKD2oxgT8WmhafpbU75Mk8L9pKt+WMgwMd6GRgoiBxi6aK6CGR3v53+XzQhq\n94tCvAJrY+ZN9XKBxl+Z0dmjlyDsdsTSwYfzksuUXxonp0VROeCKJ2v2RUBP\niYtvotcJqDiYVv8qP5iuRtQggxjDin4zVQh5574VJuwbakbcfWAIT9T9l3Yk\n3mm+F38EVRICDkFi55Jd7tBGt5Fi/5m5z6lPgwpoUJqrC8m2iJRHAPusZJoR\nD5xWEnd/mED2KHQKM+/QN0vdYuyiIllhCXGohrdsigiyKIcf9msq6KPLs2+3\nSjn930W2sTVD9wxl2b+5fsVLHLXep8ZgFUsovZhPTEGGacBNiPi3iEW0+P+J\ntlm5JJl/EGYEpALx+dqmcRr0d0EDvRytyw+J+S8NDddftqddRG053phiHdim\nMO/0TqU6kPEAUdCDDqNF3YOn4TI+o6xl+dcNsjvzem/qXHOqZ5v3jGGBiggW\nKI+c\r\n=GR06\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engine": {
    "node": ">= 6.0.0"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "2d7fabe07b48e45c668938c26d07241e1db8c651",
  "homepage": "https://github.com/node-modules/sdk-base#readme",
  "keywords": [
    "sdk",
    "error"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "gxcsoccer",
      "email": "gxcsoccer@126.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    }
  ],
  "name": "sdk-base",
  "optionalDependencies": {},
  "readme": "sdk-base\n---------------\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/sdk-base.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/sdk-base\n[travis-image]: https://img.shields.io/travis/node-modules/sdk-base.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/sdk-base\n[coveralls-image]: https://img.shields.io/coveralls/node-modules/sdk-base.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/node-modules/sdk-base?branch=master\n[david-image]: https://img.shields.io/david/node-modules/sdk-base.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/sdk-base\n[download-image]: https://img.shields.io/npm/dm/sdk-base.svg?style=flat-square\n[download-url]: https://npmjs.org/package/sdk-base\n\n\nA base class for sdk with some common & useful functions.\n\n## Installation\n\n```bash\n$ npm install sdk-base\n```\n\n## Usage\n\nConstructor argument:\n- {Object} options\n  - {String} [initMethod] - the async init method name, the method should be a generator function or a function return promise. If set, will execute the function in the constructor.\n\n  ```js\n  'use strict';\n\n  const co = require('co');\n  const Base = require('sdk-base');\n\n  class Client extends Base {\n    constructor() {\n      super({\n        initMethod: 'init',\n      });\n    }\n\n    * init() {\n      // put your async init logic here\n    }\n    // support async function too\n    // async init() {\n    //   // put your async init logic here\n    // }\n  }\n\n  co(function* () {\n    const client = new Client();\n    // wait client ready, if init failed, client will throw an error.\n    yield client.ready();\n\n    // support generator event listener\n    client.on('data', function* (data) {\n      // put your async process logic here\n      //\n      // @example\n      // ----------\n      // yield submit(data);\n    });\n\n    client.emit('data', { foo: 'bar' });\n\n  }).catch(err => { console.error(err); });\n  ```\n\n### API\n\n- `.ready(flagOrFunction)` flagOrFunction is optional, and the argument type can be Boolean, Error or Function.\n\n  ```js\n  // init ready\n  client.ready(true);\n  // init failed\n  client.ready(new Error('init failed'));\n\n  // listen client ready\n  client.ready(err => {\n    if (err) {\n      console.log('client init failed');\n      console.error(err);\n      return;\n    }\n    console.log('client is ready');\n  });\n\n  // support promise style call\n  client.ready()\n    .then(() => { ... })\n    .catch(err => { ... });\n\n  // support generator style call\n  yield client.ready();\n  ```\n\n- `.isReady getter` detect client start ready or not.\n- `.on(event, listener)` wrap the [EventEmitter.prototype.on(event, listener)](https://nodejs.org/api/events.html#events_emitter_on_eventname_listener), the only difference is to support adding generator listener on events, except 'error' event.\n- `once(event, listener)` wrap the [EventEmitter.prototype.once(event, listener)](https://nodejs.org/api/events.html#events_emitter_once_eventname_listener), the only difference is to support adding generator listener on events, except 'error' event.\n- `prependListener(event, listener)` wrap the [EventEmitter.prototype.prependListener(event, listener)](https://nodejs.org/api/events.html#events_emitter_prependlistener_eventname_listener), the only difference is to support adding generator listener on events, except 'error' event.\n- `prependOnceListener(event, listener)` wrap the [EventEmitter.prototype.prependOnceListener(event, listener)](https://nodejs.org/api/events.html#events_emitter_prependoncelistener_eventname_listener), the only difference is to support adding generator listener on events, except 'error' event.\n- `addListener(event, listener)` wrap the [EventEmitter.prototype.addListener(event, listener)](https://nodejs.org/api/events.html#events_emitter_addlistener_eventname_listener), the only difference is to support adding generator listener on events, except 'error' event.\n\n  ```js\n  client.on('data', function* (data) {\n    // your async process logic here\n  });\n  client.once('foo', function* (bar) {\n    // ...\n  });\n\n  // listen error event\n  client.on('error', err => {\n    console.error(err.stack);\n  });\n  ```\n\n- `.await(event)`: [await an event](https://github.com/cojs/await-event), return a promise, and it will resolve(reject if event is `error`) once this event emmited.\n\n  ```js\n  co(function* () {\n    const data = yield client.await('data');\n  });\n  ```\n\n- `.awaitFirst(event)`: [await the first event in a set of event pairs](https://github.com/node-modules/await-first), return a promise, and it will clean up after itself.\n\n  ```js\n  co(function* () {\n    const o = yield client.awaitFirst([ 'foo', 'bar' ]);\n    if (o.event === 'foo') {\n      // ...\n    }\n    if (o.event === 'bar') {\n      // ...\n    }\n  });\n  ```\n\n### License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/node-modules/sdk-base.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "npm run autod -- --check && npm run pkgfiles && npm run lint && npm run cov",
    "cov": "egg-bin cov",
    "lint": "eslint --ext .js .",
    "pkgfiles": "egg-bin pkgfiles --check",
    "test": "npm run lint && npm run test-local",
    "test-local": "egg-bin test"
  },
  "version": "3.5.1"
}
